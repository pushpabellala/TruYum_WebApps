@model TruYum_WebApp.Models.MenuItem

@{
    ViewBag.Title = "Edit";
    List<SelectListItem> l = new List<SelectListItem>();
    l.Add(new SelectListItem { Text = "Main Course", Value = "Main Course" });
    l.Add(new SelectListItem { Text = "Starters", Value = "Starters" });
    l.Add(new SelectListItem { Text = "Snacks", Value = "Snacks" });
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "MenuItemAdmin", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>MenuItem</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.freeDelivery, "Free Delivery", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.freeDelivery)
                    @Html.ValidationMessageFor(model => model.freeDelivery, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.price, "Price", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dateOfLaunch, "Date of Launch", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dateOfLaunch, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.dateOfLaunch, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Active)
                    @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>





        <div class="form-group">
            @Html.LabelFor(model => model.category, "Category", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.category, l, "Select Category")
                @Html.ValidationMessageFor(model => model.category, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                <input type="button" value="Remove" class="btn btn-default" onclick="location.href='@Url.Action("Delete","MenuItemAdmin",new { id=Model.Id})'" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index/true")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

